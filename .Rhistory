x <- 124
x
print (x)
x.attributes()
x.attribute()
x
[2]
x <- 1:5-
x <- 1:50
x <- 1:50
x
lm
lm()
clear
cls
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
z <- c(555)
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,1000)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect <1
tf
num_vect >=6
my_char <- c("my","name", "is")
my_char <- c("My","name", "is")
my_char
paste(my_char, collapse=" ")
c(my_char,"xunmao")
my_name <- c(my_char,"xunmao")
my_name
paste(my_name, collaspe=" ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000).
z <- rep(NA,1000)
my_data <-sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na,TRUE)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
?c
c(x[3],x[5],x[7])
c(3,5,7)
c([3],[5],[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo= 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <-c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <-(1:20, 4,5)
my_matrix2 <-(c(1:20), 4,5)
my_matrix2 <-matrix(1:20, 4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c(patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, cnames)
colnames(my_data)
colnames(my_data) <- cnames
mydata
my_data
?rbind
x <- list(2, "a", "b", TRUE)
x[1]
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x >= 11] <- 4
x
x <- 1:4
y <- 2:3
x+y
y
clear
cls
read.csv()
?read.csv
read.csv(hw1.csv)
read.csv("hw1.csv")
read.csv("hw1_data.csv")
read.csv("datasciencemod\rwd\hw1_data.csv")
read.csv("datasciencemod/rwd/hw1_data.csv")
?read.csv
read.csv("datasciencemod/rwd/hw1_data.csv", 2)
read.csv("datasciencemod/rwd/hw1_data.csv", nrows=2)
read.csv("datasciencemod/rwd/hw1_data.csv", nrows=-2)
wc
wc
read.csv("datasciencemod/rwd/hw1_data.csv", skip=46)
read.csv("datasciencemod/rwd/hw1_data.csv")
countLines
read.csv("datasciencemod/rwd/hw1_data.csv", nrows=47)
x <- read.csv("datasciencemod/rwd/hw1_data.csv", nrows=2)
x
x <- read.csv("datasciencemod/rwd/hw1_data.csv")
length(x)
x
dim(x)
x <- read.csv("datasciencemod/rwd/hw1_data.csv" skip=151)
x <- read.csv("datasciencemod/rwd/hw1_data.csv",skip=151)
x
x <- read.csv("datasciencemod/rwd/hw1_data.csv",skip=150)
x
x <- read.csv("datasciencemod/rwd/hw1_data.csv", header=true,skip=150)
x <- read.csv("datasciencemod/rwd/hw1_data.csv")
class (x)
x[152:153]
x[152]
x[1]
x[1:6, 151:152]
x[1:5, 151:152]
x
?matrix
?data.frame
x(1)
x[1]
x[1,150]
x[1,151]
x[1,152]
x[1,153]
x[,1]
?matrix
is.matrix(x)
?data.frame
?subset
x[151,]
x[152:153,]
x[47,]
is.na(x)
na
?na
?is.na
g <- is.na(x)
g
sum(is.na(x))
sum(is.na(x[,"Ozone"]))
mean(!is.na(x["Ozone"]))
mean(!is.na(x[,"Ozone"]))
?mean
mean(1)
mean(1+3+24)
mean(x[",Ozone"])
mean(x[,"Ozone"])
mean(!is.na(x[,"Ozone"]))
t <- (!is.na(x[,"Ozone"]))
t
is.na(x[,"Ozone"]
is.na(x[,"Ozone"])
is.na(x[,"Ozone"])
!is.na(x[,"Ozone"])
y <- na.omit(x)
y
x
y
mean (y)
y
mean(y[,"Ozone"])
e <- y[,"Ozone">31 & "Temp">90]
e
e <- y[,"Ozone">31,"Temp">90]
y[,"Ozone"] > 31
t1 <- y[,"Ozone"] > 31
t1 <- y[,"Ozone">31]
x[,"Ozone"]
x[,"Ozone">31]
x[,"Ozone"] > 31
x[, "Ozone"> 31]
x["Ozone"> 31]
x["Ozone"]
x["Ozone", "Temp"]
x[,"Ozone", "Temp"]
x[,"Ozone" & "Temp"]
?data.frame
x[,"Ozone"]
t1 <- subset(x, "Ozone"> 31 & "Temp">90)
t1
t1 <- subset(x, Ozone> 31 & Temp>90)
t1
mean(t1[,"Solar.R"])
t1 <-subset(x, Month=6)
mean([t1,"Temp"])
mean(t1[,"Temp"])
t1
t1 <-subset(x, Month==6)
mean(t1[,"Temp"])
t1 <-subset(x, Month==5)
max(t1[,"Ozone"])
t1 < na.omit(t1)
t2 <-na.omit(t1)
max(t2[,"Ozone"])
x
x[47]
x[47,]
x[152:153,]
x[1:2,]
x <- 1:4
y <-2
xy
x+y
x <- list(2, "a", "b", TRUE)
x[2]
x[[2]]
x <-4L
class(x0)
class(x)
sd
?sd
x <-rnorm(100)
sd(x)
args(sd)
args(lm)
args(plotting)
args(plot)
args(paste)
above <-function (x, n) {
use <- x >n
x[use]
}
above(1,10)
above(50,10)
above(50)
above <-function (x, n=10) {
use <- x >n
x[use]
}
above (x)
x <-1:20
columnmean <- function(y){
nc <-ncol(y)
means <-numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE){
nc <-ncol(y)
means <-numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,false)
columnmean(airquality,FALSE)
x <- Sys.time()
x
p <- as.POSIXct
p
unclass(p)
p <- as.POSIXlt
p
p <- as.POSIXlt()
p <- as.POSIXlt(x)
p
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
if(x > 5) x <- 0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
x <-5
y <- if(x < 3) {
NA
} else {
10
}
y
?inverse
??inverse
mean
inverse
inverse()
load(matrix)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setInverse <- function(inverse) m <<- inverse
getInverse <- function() m
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getInverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setInverse(m)
m
}
makeCacheMatrix()
t <- makeCacheMatrix()
t
cacheSolve(t)
matrix
? matrix
NCols=5
NRows=5
testSet<-matrix(runif(NCols*NRows), ncol=NCols)
testSet
makeCacheMatrix(testSet)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setInverse <- function(inverse) m <<- inverse
getInverse <- function() m
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
makeCacheMatrix(testSet)
t <-makeCacheMatrix(testSet)
cacheSolve(t)
cacheSolve(t)
cacheSolve(t)
cacheSolve(t)
NCols=100
NRows=100
testSet<-matrix(runif(NCols*NRows), ncol=NCols)
testSet
t<- makeCacheMatrix(testSet)
cacheSolve(t)
cacheSolve(t)
clear
cls
debug(ls)
ls
?ls
q
cq
q
exit
?ls
activity_master <-read.csv("activity.csv", stringsAsFactors=FALSE)
setwd("~/datasciencemod/source/RepData_PeerAssessment1")
activity_master <-read.csv("activity.csv", stringsAsFactors=FALSE)
val_by_day <-aggregate(steps ~ date, data=activity_master, mean)
View(val_by_day)
set_with_na <- activity_master[is.na(activity_master$steps),]
View(set_with_na)
set_with_na[set_with_na$date==2012-10-01]
set_with_na[set_with_na$date=="2012-10-01"]
set_with_na[set_with_na$date=="2012-10-01",]
View(val_by_day)
set_with_na[set_with_na$date=="2012-10-02",]
set_with_na[set_with_na$date=="2012-10-03",]
set_with_na[set_with_na$date=="2012-10-04",]
set_with_na[set_with_na$date=="2012-10-05",]
set_with_na[set_with_na$date=="2012-10-05",]
set_with_na[set_with_na$date=="2012-10-12",]
set_with_na[set_with_na$date=="2012-10-13",]
View(set_with_na)
set_with_na[set_with_na$date=="2012-11-01",]
View(val_by_day)
set_with_na[set_with_na$steps] <-mean(x$steps)
activity <- na.omit(activity_master[activity_master$steps>0,])
x<-aggregate(steps ~ date, data=activity, sum)
set_with_na[set_with_na$steps] <-mean(x$steps)
set_with_na[set_with_na$steps] <-123
set_with_na[set_with_na$steps] <-"123"
set_with_na
set_with_na
View(set_with_na)
set_with_na[set_with_na$steps]
set_with_na[set_with_na$steps,2]
set_with_na[set_with_na$steps,2] <-mean(x$steps)
set_with_na[set_with_na$steps,2] <-as.character(median(x$steps))
set_with_na[set_with_na$steps,2] <-0
set_with_na[set_with_na$steps,2] <-"0"
set_with_na[set_with_na$steps,2]
set_with_na[set_with_na$steps,2] <-c("0")
set_with_na[set_with_na$steps,2] <-c(0)
mutate
?mutate
??mutate
library(dplyr)
mutate
?mutate
mutate(set_with_na, steps=median(x$steps))
min
min(activity)
?min
min(activity$interval)
max(activity$interval)
View(activity)
mean(x$steps)
median(x$steps)
x<-aggregate(steps ~ date, data=activity, mean)
View(x)
mean(x$steps)
View(activity_master)
mutate(set_with_na, steps=mean(x$steps))
mutate(set_with_na, steps=mean(val_by_day$steps))
View(val_by_day)
mean(val_by_day$steps)
mutate(set_with_na, steps=as.character(mean(val_by_day$steps)))
class(x)
mutate(set_with_na, steps=mean(val_by_day$steps))
mutate(set_with_na, steps=mean(val_by_day$steps))ean(val_by_day$steps
mean(val_by_day$steps)
val_by_day <-aggregate(steps ~ date, data=activity, mean)
mean(val_by_day$steps)
mutate(set_with_na, steps=129)
?rbind
